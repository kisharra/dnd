{"version":3,"file":"bundle.c57b9c0c1a1d29aafc0c.js","mappings":"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","sources":["webpack://trello-dnd-webpack/./src/state.js","webpack://trello-dnd-webpack/./src/index.js","webpack://trello-dnd-webpack/./src/app.js","webpack://trello-dnd-webpack/./src/dom.js","webpack://trello-dnd-webpack/./src/dnd.js"],"sourcesContent":["const STORAGE_KEY = 'trello-dnd-state';\n\nexport function loadState() {\n  try {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    if (!raw) {\n      return { columns: [[], [], []] };\n    }\n    return JSON.parse(raw);\n  } catch {\n    return { columns: [[], [], []] };\n  }\n}\n\nexport function saveState(state) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n}\n","import './styles.css';\nimport { loadState } from './state';\nimport { initApp } from './app';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const state = loadState();\n  const board = document.getElementById('board');\n  initApp(board, state);\n});\n","// app.js\nimport { createColumn } from './dom';\nimport { enableDnD } from './dnd';\n\nexport function initApp(board, state, saveState, loadState) {\n  function renderBoard() {\n    board.innerHTML = '';\n    const titles = ['Todo', 'In Progress', 'Done'];\n    titles.forEach((title, idx) => {\n      const column = createColumn(title, idx, state, renderBoard);\n      board.appendChild(column);\n    });\n  }\n\n  // ✅ DnD включаем только один раз\n  enableDnD(board, state, renderBoard);\n\n  renderBoard();\n}\n","import { saveState } from './state';\n\nexport function createColumn(title, columnIndex, state, renderBoard) {\n  const column = document.createElement('div');\n  column.className = 'column';\n\n  const header = document.createElement('div');\n  header.className = 'column__header';\n\n  const h3 = document.createElement('h3');\n  h3.className = 'column__title';\n  h3.textContent = title;\n\n  header.appendChild(h3);\n  column.appendChild(header);\n\n  const body = document.createElement('div');\n  body.className = 'column__body';\n  body.dataset.columnIndex = columnIndex;\n  column.appendChild(body);\n\n  state.columns[columnIndex].forEach((text, cardIndex) => {\n    const card = createCard(text, columnIndex, cardIndex, state, renderBoard);\n    body.appendChild(card);\n  });\n\n  const add = document.createElement('div');\n  add.className = 'add';\n  const addBtn = document.createElement('button');\n  addBtn.className = 'add__btn';\n  addBtn.textContent = '+ Add another card';\n\n  addBtn.addEventListener('click', () => {\n    addBtn.style.display = 'none';\n    const form = createAddForm(columnIndex, state, renderBoard, addBtn);\n    add.appendChild(form);\n  });\n\n  add.appendChild(addBtn);\n  column.appendChild(add);\n\n  return column;\n}\n\nfunction createCard(text, columnIndex, cardIndex, state, renderBoard) {\n  const card = document.createElement('div');\n  card.className = 'card';\n  card.draggable = false;\n  card.dataset.columnIndex = columnIndex;\n  card.dataset.cardIndex = cardIndex;\n\n  const span = document.createElement('div');\n  span.className = 'card__text';\n  span.textContent = text;\n\n  const remove = document.createElement('button');\n  remove.className = 'card__remove';\n  remove.innerHTML = '&times;';\n\n  remove.addEventListener('click', () => {\n    state.columns[columnIndex].splice(cardIndex, 1);\n    saveState(state);\n    renderBoard();\n  });\n\n  card.appendChild(span);\n  card.appendChild(remove);\n\n  return card;\n}\n\nfunction createAddForm(columnIndex, state, renderBoard, addBtn) {\n  const form = document.createElement('form');\n  form.className = 'add__form';\n\n  const textarea = document.createElement('textarea');\n  textarea.className = 'add__textarea';\n  textarea.required = true;\n\n  const actions = document.createElement('div');\n  actions.className = 'add__actions';\n\n  const saveBtn = document.createElement('button');\n  saveBtn.type = 'submit';\n  saveBtn.className = 'btn';\n  saveBtn.textContent = 'Add Card';\n\n  const cancelBtn = document.createElement('button');\n  cancelBtn.type = 'button';\n  cancelBtn.className = 'btn secondary';\n  cancelBtn.textContent = 'Cancel';\n\n  cancelBtn.addEventListener('click', () => {\n    form.remove();\n    addBtn.style.display = '';\n  });\n\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    const value = textarea.value.trim();\n    if (!value) return;\n    state.columns[columnIndex].push(value);\n    saveState(state);\n    renderBoard();\n  });\n\n  actions.appendChild(saveBtn);\n  actions.appendChild(cancelBtn);\n  form.appendChild(textarea);\n  form.appendChild(actions);\n\n  return form;\n}\n","import { saveState } from './state';\n\nexport function enableDnD(board, state, renderBoard) {\n  let draggedCard = null;\n  let ghost = null;\n  let placeholder = null;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  board.addEventListener('mousedown', e => {\n    const card = e.target.closest('.card');\n    if (!card || e.target.closest('.card__remove')) return;\n\n    draggedCard = card;\n    const rect = card.getBoundingClientRect();\n    offsetX = e.clientX - rect.left;\n    offsetY = e.clientY - rect.top;\n\n    ghost = card.cloneNode(true);\n    ghost.classList.add('dragging');\n    ghost.style.width = rect.width + 'px';\n    ghost.style.left = e.clientX - offsetX + 'px';\n    ghost.style.top = e.clientY - offsetY + 'px';\n    ghost.style.position = 'fixed';\n    ghost.style.pointerEvents = 'none';\n    document.body.appendChild(ghost);\n\n    placeholder = document.createElement('div');\n    placeholder.className = 'placeholder';\n    placeholder.style.height = rect.height + 'px';\n    card.parentNode.insertBefore(placeholder, card.nextSibling);\n\n    card.style.display = 'none';\n    document.body.classList.add('grabbing');\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  });\n\n  function onMouseMove(e) {\n    if (!ghost) return;\n    ghost.style.left = e.clientX - offsetX + 'px';\n    ghost.style.top = e.clientY - offsetY + 'px';\n\n    const body = e.target.closest('.column__body');\n    if (body) {\n      const cards = [...body.querySelectorAll('.card')].filter(c => c !== draggedCard);\n      let placed = false;\n      for (const c of cards) {\n        const rect = c.getBoundingClientRect();\n        if (e.clientY < rect.top + rect.height / 2) {\n          body.insertBefore(placeholder, c);\n          placed = true;\n          break;\n        }\n      }\n      if (!placed) body.appendChild(placeholder);\n    }\n  }\n\n  function onMouseUp() {\n    if (!ghost || !placeholder || !draggedCard) return;\n\n    const col = placeholder.closest('.column__body');\n    const newColumnIndex = parseInt(col.dataset.columnIndex, 10);\n    const newCardIndex = [...col.children].indexOf(placeholder);\n\n    const oldColumnIndex = parseInt(draggedCard.dataset.columnIndex, 10);\n\n    // ✅ Берём актуальный индекс карточки в DOM, а не устаревший dataset\n    const oldColEl = board.querySelector(`.column__body[data-column-index=\"${oldColumnIndex}\"]`);\n    const oldCardIndex = [...oldColEl.querySelectorAll('.card')].indexOf(draggedCard);\n\n    if (oldCardIndex !== -1) {\n      const [moved] = state.columns[oldColumnIndex].splice(oldCardIndex, 1);\n      state.columns[newColumnIndex].splice(newCardIndex, 0, moved);\n      saveState(state);\n    }\n\n    cleanup();\n    renderBoard();\n  }\n\n  function cleanup() {\n    if (ghost) ghost.remove();\n    if (placeholder) placeholder.remove();\n    if (draggedCard) draggedCard.style.display = '';\n    ghost = null;\n    draggedCard = null;\n    placeholder = null;\n    document.body.classList.remove('grabbing');\n    document.removeEventListener('mousemove', onMouseMove);\n    document.removeEventListener('mouseup', onMouseUp);\n  }\n}\n"],"names":["STORAGE_KEY","saveState","state","localStorage","setItem","JSON","stringify","document","addEventListener","raw","getItem","parse","columns","loadState","board","renderBoard","innerHTML","forEach","title","idx","column","columnIndex","createElement","className","header","h3","textContent","appendChild","body","dataset","text","cardIndex","card","draggable","span","remove","splice","createCard","add","addBtn","style","display","form","textarea","required","actions","saveBtn","type","cancelBtn","e","preventDefault","value","trim","push","createAddForm","createColumn","draggedCard","ghost","placeholder","offsetX","offsetY","onMouseMove","left","clientX","top","clientY","target","closest","cards","querySelectorAll","filter","c","placed","rect","getBoundingClientRect","height","insertBefore","onMouseUp","col","newColumnIndex","parseInt","newCardIndex","children","indexOf","oldColumnIndex","oldCardIndex","querySelector","moved","classList","removeEventListener","cloneNode","width","position","pointerEvents","parentNode","nextSibling","enableDnD","initApp","getElementById"],"sourceRoot":""}